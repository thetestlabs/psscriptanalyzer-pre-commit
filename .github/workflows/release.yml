name: Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

permissions:
  contents: read

jobs:
  test:
    name: Run tests before release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Install test dependencies
      run: uv sync --extra dev
    
    - name: Run tests
      run: uv run pytest
    
    - name: Run quality checks
      run: |
        uv run ruff check .
        uv run ruff format --check .
        uv run mypy psscriptanalyzer_hook.py

  build-docs:
    name: Build documentation
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Install documentation dependencies
      run: uv sync --extra docs
    
    - name: Build documentation
      run: |
        cd docs
        make html
      env:
        SPHINXOPTS: "-W --keep-going"

  publish-pypi:
    name: Build and publish to PyPI
    runs-on: ubuntu-latest
    needs: [test, build-docs]
    environment: 
      name: pypi
      url: https://pypi.org/p/psscriptanalyzer-pre-commit
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Install build dependencies
      run: uv tool install build twine
    
    - name: Verify version matches tag
      run: |
        import tomllib
        import sys
        import os
        
        # Get the tag from the GitHub ref
        tag = os.environ['GITHUB_REF'].replace('refs/tags/v', '')
        
        # Read version from pyproject.toml
        with open('pyproject.toml', 'rb') as f:
            data = tomllib.load(f)
            version = data['project']['version']
        
        if tag != version:
            print(f"❌ Tag version ({tag}) doesn't match pyproject.toml version ({version})")
            sys.exit(1)
        else:
            print(f"✅ Tag version ({tag}) matches pyproject.toml version ({version})")
      shell: python
    
    - name: Build package
      run: uv tool run build
    
    - name: Check package
      run: uv tool run twine check dist/*
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true
        print-hash: true
