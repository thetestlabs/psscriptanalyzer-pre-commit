[build-system]
requires = ["hatchling==1.14.1"]
build-backend = "hatchling.build"

[project]
name = "psscriptanalyzer-pre-commit"
version = "1.0.0"
description = "Pre-commit hook for PSScriptAnalyzer - PowerShell static analysis and formatting"
readme = "README.md"
license = { text = "MIT" }
authors = [{ name = "Chris McQuaid", email = "chris@thetestlabs.io" }]
maintainers = [{ name = "Chris McQuaid", email = "chris@thetestlabs.io" }]
requires-python = ">=3.9"
dependencies = []
keywords = [
    "pre-commit",
    "powershell",
    "psscriptanalyzer",
    "static-analysis",
    "linting",
    "formatting",
    "code-quality",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Other",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
    "Topic :: Text Processing :: Linguistic",
    "Typing :: Typed",
]

[project.urls]
Homepage = "https://github.com/thetestlabs/psscriptanalyzer-pre-commit"
Repository = "https://github.com/thetestlabs/psscriptanalyzer-pre-commit"
Issues = "https://github.com/thetestlabs/psscriptanalyzer-pre-commit/issues"
Documentation = "https://psscriptanalyzer-pre-commit.readthedocs.io/"
Changelog = "https://github.com/thetestlabs/psscriptanalyzer-pre-commit/blob/main/CHANGELOG.md"

[project.scripts]
psscriptanalyzer-hook = "psscriptanalyzer_hook:main"

[tool.ruff]
target-version = "py39"
line-length = 120
exclude = [
    ".eggs",
    ".git",
    ".mypy_cache",
    ".tox",
    ".venv",
    "venv",
    "_build",
    "buck-out",
    "build",
    "dist",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "SIM", # flake8-simplify
    "RET", # flake8-return
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["psscriptanalyzer_hook"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
skips = ["B101", "B404", "B603"]
exclude_dirs = ["tests"]

[tool.bandit.assert_used]
skips = ["**/tests/**", "**/test_*.py"]

[dependency-groups]
dev = [
    "build>=1.3.0",
    "mypy>=1.17.1",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.7",
    "twine>=6.1.0",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=2.0.0",
    "myst-parser>=3.0.1",
    "sphinx-autodoc-typehints>=2.3.0",
    "sphinx-copybutton>=0.5.2",
    "linkify-it-py>=2.0.0",
]
